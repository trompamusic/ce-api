"https://schema.org/PropertyValue"
type PropertyValue implements ThingInterface {
  ### Metadata properties ###
  "http://purl.org/dc/elements/1.1/identifier,https://schema.org/identifier"
  identifier: ID
  "http://purl.org/dc/elements/1.1/title"
  title: String
  "http://purl.org/dc/elements/1.1/description,https://schema.org/description"
  description: String
  "http://purl.org/dc/elements/1.1/type,https://www.w3.org/2000/01/rdf-schema#type"
  type: String
  ########################
  ### ThingInterface properties ###
  "https://schema.org/additionalType"
  additionalType: [String]
  "https://schema.org/additionalProperty"
  additionalProperty: [PropertyValue] @relation(name: "ADDITIONAL_PROPERTY", direction: "OUT")
  "https://schema.org/alternateName"
  alternateName: String
  "https://schema.org/disambiguatingDescription"
  disambiguatingDescription: String
  "https://schema.org/image"
  image: URL
  "https://schema.org/mainEntityOfPage"
  mainEntityOfPage: [CreativeWorkInterface] @relation(name: "MAIN_ENTITY_OF_PAGE", direction: "OUT")
  "https://schema.org/name"
  name: String
  "https://schema.org/potentialAction"
  potentialAction: [ActionInterface] @relation(name: "POTENTIAL_ACTION", direction: "OUT")
  "https://schema.org/sameAs"
  sameAs: URL
  "https://schema.org/subjectOf"
  subjectOf: [CreativeWorkInterface] @relation(name: "SUBJECT_OF", direction: "OUT")
  "https://schema.org/url"
  url: URL
  ################################
  ### PropertyValue properties ###
  #maxValue: Int
  #measurementTechnique: String
  #minValue: Number
  "https://schema.org/propertyID"
  propertyID: String
  #unitCode: String
  #unitText: String
  "https://schema.org/value"
  value: String # string, that can be validated/cast according to value of `valueReference` property
  "https://schema.org/value, TROMPA specific extension to mitigate Apollo limitation, and allow `value` to be scalar or a node"
  nodeValue: ThingInterface @relation(name: "NODE_VALUE", direction: "OUT")
  "https://schema.org/valueReference"
  valueReference: ValueReference! # contains either a valid scalar or valid schema-type
}
